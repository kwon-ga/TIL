4.1
변수 (variable) : 하나의 값을 저장하기 위해 확보한 메모리 공간 자체 또는 그 메모리 공간을 식별하기 위해 붙인 이름을 말한다. 간단하게 말하면 메모리에 저장된 위치를 가리키는 상징적인 이름이다.

간단히 말하면 변수는 언어에서 값을 저장하고 참조하는 메커니즘으로, 값의 위치를 가리키는 상징적인 이름이다. 상징적인 이름인 변수는 프로그래밍 언어의 컴파일러, 인터프리터에 의해 값이 저장된다.

즉 변수의 선언은 메모리에 공간을 할당받는 행위이며 변수 명은 할당받는 메모리의 공간을 지칭하는 이름이라고 생각하면 된다.

다양한 선언
let var1 = 'Kwon';
let arr1 = {'var2':2,'var3':3}
let obj1 = [
	{'name':'kwon', 'age':19},
	{'name':'kim','age':20}
];



4.2
식별자 : 어떤 값을 구별해서 식별할 수 있는 고유한 이름을 말한다.

식별자는 값이 저장되어 있는 메모리의 주소를 기억해야한다.
즉, (변수명 = 식별자) === 0x066F913 (메모리 주소)  <<< === >>> 메모리에 저장된 값

식별자는 변수 이름에만 국한해서 사용하지 않는다. 
변수, 함수, 클래스 등의 이름은 모두 식별자다.

메모리 상에 존재하는 어떤 값을 식별할 수 있는 이름은 모두 식별자라고 부른다.

이와 같은 식별자들은 네이밍 규칙을 준수해야하며, 선언에 의해 스크립트 엔진에 존재를 알린다.



4.3
변수의 선언 : 변수의 선언이란 변수를 생성하는 것을 말한다. 깊이 들어가면 값을 저장하기 위한 메모리 공간을 확보하고 변수 이름과 확보된 메모리 공간의 주소를 연결해서 값을 저장할 수 있게 준비하는 것이다.
또한 변수를 선언하면 할당된 메모리 공간은 해제되기 전까지는 독립적으로 보존된다.



4.4
undefined : 자바스크립트에서 제공하는 원시 타입의 값이다. 
변수를 선언한 이후 ( let aaaa ;) 값을 할당하지 않은 경우에 undefined 라는 원시 데이터가 암묵적으로 할당되어 초기화된다.

선언 > 변수의 이름을 등록해서 스크립트 엔진에 존재를 알림
초기화 > 값을 저장하기 위한 메모리 공간을 확보하고 undefined 값을 할당한다.

*모든 식별자를 사용하려면 선언이 필요하다.





4.7
식별자 네이밍 규칙
-식별자는 특수문자를 제외한 문자, 숫자, _, $ 로 구성하여 만들어야한다.
-단, 식별자는 특수문자를 제외한 문자, _ , $ 로 시작해야한다. 숫자로 시작 불가능
-예약어는 식별자로 사용할 수 없다.
-자바스크립트는 대/소문자를 구별한다.
-의미를 명확하게 표현하는 것이 좋은 변수명이다.


*네이밍 컨벤션
-카멜 케이스(camelCase) -> firstName
-스네이크 케이스(snake_case) -> first_name
-파스칼 케이스(PascalCase) -> FirstName
-헝가리언 케이스(typ+identifier) -> strFirstName
-DOM 노드 -> let $elem = document.getElementById('exId');

*예약어 ? 
if, new, null,, delete, case, class 등의 단어



cs ++
-컴퓨터는 CPU를 사용해 연산하고, 메모리를 통해 데이터를 기억한다.
-메모리는 데이터를 저장할 수 있는 메모리 셀의 집합체이다. 메모리 셀 하나의 크기는 1바이트(8비트)이며,
컴퓨터는 메모리 셀의 크기, 즉 1바이트 단위로 데이터를 저장하거나 읽어드린다.
-각 셀은 고유의 메모리 주소를 갖는다. 이 메모리 주소는 메모리 공간의 위치를 나타내며, 0부터 시작해서 메모리의 크기만큼 정수로 표현된다.
-컴퓨터는 모든 데이터를 2진수로 처리한다. 따라서 메모리에 저장되는 데이터는 데이터의 종류 (숫자 텍스트 이미지 동영상 등)와 상관 없이 모두 2진수로 저장된다.


